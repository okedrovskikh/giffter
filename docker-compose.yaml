version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  core:
    build:
      context: ./
      dockerfile: ./core/Dockerfile
    container_name: core
    restart: on-failure
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/lana
    ports:
      - 8080:8080
    networks:
      - bff-net
      - db-net
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgis/postgis:15-3.3-alpine
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: kokline
      POSTGRES_PASSWORD: 123
    ports:
      - 5433:5432
    networks:
      - db-net
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: on-failure
    command:
      - --web.listen-address=:10000
      - --storage.tscb.path=/prometheus
      - --config.file=?etc/prometheus/prometheus.yaml
    expose:
      - 10000
    ports:
      - 10000:10000
    networks:
      - app-network

  grafana:
    image: grafana/grafana:8.2.6
    container_name: grafana
    restart: on-failure
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - app-network
    depends_on:
      - prometheus
